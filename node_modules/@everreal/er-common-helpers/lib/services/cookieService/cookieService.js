"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var cookieHelper = require("cookie");
function setCookie(input) {
    if (input === void 0) { input = {}; }
    var _a = input.res, res = _a === void 0 ? null : _a, _b = input.name, name = _b === void 0 ? '' : _b, _c = input.value, value = _c === void 0 ? '' : _c, maxAge = input.maxAge, domain = input.domain, path = input.path, _d = input.secure, secure = _d === void 0 ? false : _d, _e = input.httpOnly, httpOnly = _e === void 0 ? false : _e, sameSite = input.sameSite;
    var maxAgeMilis = maxAge * 1000;
    var expirationDate = new Date(Date.now() + maxAgeMilis);
    if (res && res.cookie) {
        res.cookie(name, value, {
            maxAge: maxAgeMilis,
            path: path,
            httpOnly: httpOnly,
            domain: domain,
            secure: secure,
            sameSite: sameSite,
        });
    }
    else {
        var cookieString = cookieHelper.serialize(name, value, {
            maxAge: maxAge,
            expires: expirationDate,
            path: path,
            httpOnly: httpOnly,
            domain: domain,
            secure: secure,
            sameSite: sameSite,
        });
        window.document.cookie = cookieString;
    }
}
exports.setCookie = setCookie;
function getCookie(_a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.req, req = _c === void 0 ? null : _c, _d = _b.name, name = _d === void 0 ? '' : _d;
    if (req && req.cookies) {
        return req.cookies[name];
    }
    if (window) {
        var cookies = cookieHelper.parse(window.document.cookie);
        return cookies[name] || '';
    }
    return null;
}
exports.getCookie = getCookie;
function deleteCookie(input) {
    if (input === void 0) { input = {}; }
    setCookie(__assign(__assign({}, input), { value: '', maxAge: -1 }));
}
exports.deleteCookie = deleteCookie;
//# sourceMappingURL=cookieService.js.map