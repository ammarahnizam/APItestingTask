"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("./constants");
exports.calculateWithSign = function (val1, val2, sign) {
    var v1 = val1 || 0;
    var v2 = val2 || 0;
    switch (sign) {
        case constants_1.MATH_OPERATORS.DIVIDE:
            return v2 === 0 ? 0 : v1 / v2;
        case constants_1.MATH_OPERATORS.MINUS:
            return v1 - v2;
        case constants_1.MATH_OPERATORS.MULTIPLY:
            return v1 * v2;
        case constants_1.MATH_OPERATORS.PLUS:
            return v1 + v2;
        default:
            return 0;
    }
};
exports.compareWithSign = function (value, search, sign) {
    if (sign === constants_1.COMPARISON_SIGNS.EQUALS) {
        return value === search;
    }
    if (sign === constants_1.COMPARISON_SIGNS.GREATER_THAN) {
        return value > search;
    }
    if (sign === constants_1.COMPARISON_SIGNS.GREATER_THAN_EQUAL) {
        return value >= search;
    }
    if (sign === constants_1.COMPARISON_SIGNS.LOWER_THAN) {
        return value < search;
    }
    if (sign === constants_1.COMPARISON_SIGNS.LOWER_THAN_EQUAL) {
        return value <= search;
    }
    if (sign === constants_1.COMPARISON_SIGNS.STRING_CONTAINS) {
        return typeof value === 'string' && value.includes(search);
    }
    return false;
};
//# sourceMappingURL=math.js.map