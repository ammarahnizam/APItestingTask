"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var formatters_1 = require("./../formatters");
var testSandboxFormatFloat = function (value, expectedValue, options) {
    it("SHOULD return " + expectedValue + " for value=" + value, function () {
        expect(formatters_1.formatDouble(value, options)).toBe(expectedValue);
    });
};
describe('WHEN testing normalizers', function () {
    describe('WHEN testing formatFloat', function () {
        testSandboxFormatFloat(null, null);
        testSandboxFormatFloat(123, '123');
        testSandboxFormatFloat(0, '0');
        testSandboxFormatFloat(999.99, '999,99');
        testSandboxFormatFloat(1000000.23561, '1.000.000,24', { maxDecimalsAfterComma: 2 });
        testSandboxFormatFloat(1000000.23561, '1.000.000,2356', { maxDecimalsAfterComma: 4 });
        testSandboxFormatFloat(1000000.23561, '1.000.000,235610', { exactDecimalsAfterComma: 6 });
        testSandboxFormatFloat(1000000.2, '1.000.000,20', { exactDecimalsAfterComma: 2 });
        testSandboxFormatFloat(1000000, '1.000.000');
        testSandboxFormatFloat(1.5432, '1,5432');
        testSandboxFormatFloat(1, '1');
        testSandboxFormatFloat('', null);
        testSandboxFormatFloat(NaN, null);
    });
});
//# sourceMappingURL=formatters.formatDouble.test.js.map