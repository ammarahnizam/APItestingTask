"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var undefsafe = require("undefsafe");
var googleAnalyticsService = require("../services/googleAnalyticsService/googleAnalyticsService");
exports.analyticsMiddleware = function (_a) {
    var _b = (_a === void 0 ? {} : _a).analyticsService, analyticsService = _b === void 0 ? googleAnalyticsService : _b;
    return function (store) { return function (next) { return function (action) {
        var dispatch = store.dispatch, getState = store.getState;
        if (typeof action === 'function') {
            return action(dispatch, getState);
        }
        var state = getState();
        var user = undefsafe(state, 'common.currentUser');
        analyticsService.setUser(user);
        var type = action.type, result = action.result, error = action.error, meta = action.meta;
        if (!type || !meta || !meta.analytics) {
            return next(action);
        }
        var analytics = meta.analytics;
        trySendGoogleAnalyticsEvent({
            user: user,
            analytics: analytics,
            result: result,
            error: error,
            actionName: type,
            analyticsService: analyticsService,
        });
        return next(action);
    }; }; };
};
function trySendGoogleAnalyticsEvent(_a) {
    var user = _a.user, analytics = _a.analytics, result = _a.result, error = _a.error, actionName = _a.actionName, analyticsService = _a.analyticsService;
    if (!analyticsService) {
        return;
    }
    if (!analytics) {
        return;
    }
    if (!actionName) {
        return;
    }
    var category = analytics.category, label = analytics.label;
    if (category && label) {
        var payload = {
            eventCategory: category,
            eventAction: actionName,
            eventLabel: result ? label(result) : error,
            user: user,
        };
        analyticsService.sendEvent(payload);
    }
}
//# sourceMappingURL=analyticsMiddleware.js.map